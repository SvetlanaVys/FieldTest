# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile


# Point JPA at our database configuration
jpa.default=defaultPersistenceUnit

# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

play.http.secret.key="QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n"

db.default {
//  driver = org.h2.Driver
//  url = "jdbc:h2:mem:play"

  #PoreSQL
  driver="org.postgresql.Driver"
  url="jdbc:postgresql://ec2-54-217-205-90.eu-west-1.compute.amazonaws.com:5432/d4ju1im0m8c0tp?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory"
  user="snanxolflkwvpb"
  password="acefa2390882c71ed9b6cff16f8238c24d4a9b12d1d85c042a76961170009686"

//  url="jdbc:postgresql://localhost/postgres"
//  user="postgres"
//  password="myDB"

  # Provided for JPA access
  jndiName=DefaultDS

  # Set Hikari to fixed size
  hikaricp.connectionTestQuery = "SELECT 1"
  hikaricp.minimumIdle = ${fixedConnectionPool}
  hikaricp.maximumPoolSize = ${fixedConnectionPool}
}

# Job queue sized to HikariCP connection pool
post.repository {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}


## Filter Configuration
# https://www.playframework.com/documentation/latest/Filters
# ~~~~~
# There are a number of built-in filters that can be enabled and configured
# to give Play greater security.
#
play.filters {

  # Enabled filters are run automatically against Play.
  # CSRFFilter, AllowedHostFilters, and SecurityHeadersFilters are enabled by default.
  enabled += filters.ExampleFilter

  # Disabled filters remove elements from the enabled list.
  #disabled += filters.ExampleFilter

  ## CORS filter configuration
  # https://www.playframework.com/documentation/latest/CorsFilter
  # ~~~~~
  # CORS is a protocol that allows web applications to make requests from the browser
  # across different domains.
  # NOTE: You MUST apply the CORS configuration before the CSRF filter, as CSRF has
  # dependencies on CORS settings.
  cors {
    # Filter paths by a whitelist of path prefixes
    pathPrefixes = ["/", "/v1/users", "/v1/users/email", "/v1/fields", "/v1/fields/options", "/v1/responses"]

    # The allowed origins. If null, all origins are allowed.
    allowedOrigins = ["http://localhost:4200"]

    # The allowed HTTP methods. If null, all methods are allowed
    allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]

    allowedHttpHeaders = null
  }
  hosts {
    # Allow requests to localhost on ports 9000 (dev) and 19001 (default test) ports
    allowed = ["localhost:9000", "localhost:19001", "localhost:4200"]
  }
}